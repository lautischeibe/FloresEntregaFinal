<h1>Mi Carrito</h1>
<button class="delete-cart-btn" data-id={{cart._id}}>üóëÔ∏è Eliminar carrito</button>
{{#if cart.products.length}}
<ul>
  {{#each cart.products}}
  <li class="cart-item" style="margin-bottom: 20px;">
    <img src="/img/{{product.thumbnails}}" alt="${{product.title}}" style="width: 300px; height: auto;" />
    <div>
      <strong>{{this.product.title}}</strong><br>
      <em>{{this.product.description}}</em><br>
      <strong>Precio:</strong> ${{this.product.price}}<br>
      <strong>Cantidad:</strong> {{this.quantity}}<br>
      <button onclick="removeFromCart('{{../cart._id}}', '{{this.product._id}}')">‚ùå Eliminar</button>
    </div>
  </li>
  {{/each}}
</ul>
{{else}}
<p>El carrito est√° vac√≠o. ¬°Agreg√° productos desde la tienda!</p>
{{/if}}

<script>
  async function removeFromCart(cartId, productId) {
    if (!cartId || !productId) {
      alert('Faltan datos para eliminar el producto.');
      return;
    }

    try {
      const response = await fetch(`/api/carts/${cartId}/product/${productId}`, {
        method: 'DELETE'
      });

      if (response.ok) {
        alert('Producto eliminado del carrito.');
        location.reload();
      } else {
        const errorData = await response.json();
        alert(`Error: ${errorData.message}`);
      }
    } catch (error) {
      console.error('Error al eliminar producto:', error);
      alert('Hubo un problema al eliminar el producto.');
    }
  }


  document.addEventListener("click", async (e) => {
    if (e.target.classList.contains("delete-cart-btn")) {
      const cartId = e.target.dataset.id;

      if (!confirm("¬øEst√°s seguro de que quer√©s eliminar este carrito?")) return;

      try {
        const res = await fetch(`/api/carts/${cartId}`, {
          method: "DELETE"
        });

        const result = await res.json();

        if (res.ok) {
          alert("Carrito eliminado correctamente");
          location.reload(); // o pod√©s eliminar el elemento del DOM si quer√©s evitar recargar
        } else {
          alert("Error: " + result.message);
        }
      } catch (err) {
        console.error("Error al eliminar carrito:", err);
        alert("Hubo un problema al eliminar el carrito");
      }
    }
  });

</script>